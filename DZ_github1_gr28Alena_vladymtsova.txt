
JSON
 4. Создать внешний репозиторий c названием JSON.
Зайти на сайт https://github.com, выбрать "Repositories", затем - "New",  заполнить поле "Repository name" - "JSON",поставить галочку "Add a README file", нажать кнопку "Create repository"

 5. Клонировать репозиторий JSON на локальный компьютер.  
В терминале ввести git clone https://github.com/AlenaVladymtsova/JSON.git

 6. Внутри локального JSON создать файл “new.json”.  
touch new.json

 7. Добавить файл под гит. 
git add new.json

 8. Закоммитить файл. 
git commit -m "add new file"

 9. Отправить файл на внешний GitHub репозиторий. 
git push

 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
vim new.json, затем нажать на "insert",ввести данные, после ввода данных - "Esc" :wq

 11. Отправить изменения на внешний репозиторий. 
git commit -am "about me"
 git push

 12. Создать файл preferences.json
 touch preferenses.json

 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
vim preferenses.json, затем нажать на "insert", ввести данные, после ввода данных - "Esc" :wq

 14. Создать файл sklls.json добавить информацию о скиллах, которые будут изучены на курсе в формате JSON
touch skills.json
vim skills.json
затем нажать на "insert",ввести данные после ввода данных - "Esc" :wq

 15. Отправить сразу 2 файла на внешний репозиторий. 
git commit -am "my preferenses and future skills"
git push

 16. На веб интерфейсе создать файл bug_report.json.
17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Зайти в репозиторий JSON, нажать кнопку "Add file",  выбрать "Create new file", в строке ввести имя файла, нажать "Commit new file"

 
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
В репозитории  JSON, напротив файла "bug_report.json" найти кнопку "Edit this file",  добавить текст баг репорта, добавить коммит, для сохранения изменений нажать "Commit changes"

 
 20. Синхронизировать внешний и локальный репозиторий JSON
git fetch
git pull

XML
 21. Создать внешний репозиторий c названием XML.
Зайти на сайт https://github.com, выбрать "Repositories", затем  "New",  заполнить поле "Repository name" - "XML",поставить галочку "Add a README file", нажать кнопку "Create repository"

 22. Клонировать репозиторий XML на локальный компьютер.
git clone https://github.com/AlenaVladymtsova/XML.git

 23. Внутри локального XML создать файл “new.xml”.
touch new.xml

 24. Добавить файл под гит.
git add new.xml

 25. Закоммитить файл.
git commit -m "add new file"

 26. Отправить файл на внешний GitHub репозиторий.
git push

 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
 vim new.xml, затем нажать на "insert", после ввода данных - "Esc" :wq

28. Отправить изменения на внешний репозиторий.
git commit -am "about me"
git push

 29. Создать файл preferences.xml
touch preferences.xml

 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
vim preferences.xml, затем нажать на "insert", после ввода данных - "Esc" :wq


 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
touch skills.xml
vim skills.xml, затем нажать на "insert", после ввода данных - "Esc" :wq

 32. Сделать коммит в одну строку.
git commit -am "my skills and preferences"

 33. Отправить сразу 2 файла на внешний репозиторий.
git push

 34. На веб интерфейсе создать файл bug_report.xml.
35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Зайти в репозиторий XML, нажать кнопку "Add file",  выбрать "Create new file", в строке ввести имя файла, нажать "Commit new file"

 

 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

 
 38. Синхронизировать внешний и локальный репозиторий XML
 git pull

TXT
 1. Создать внешний репозиторий c названием TXT.
Зайти на сайт https://github.com, выбрать "Repositories", затем  "New",  заполнить поле "Repository name" - "TXT", поставить галочку "Add a README file",  нажать кнопку "Create repository"

 2. Клонировать репозиторий TXT на локальный компьютер.
git clone  https://github.com/AlenaVladymtsova/TXT.git

 3. Внутри локального TXT создать файл “new.txt”.
touch new.txt

 4. Добавить файл под гит.
git add new.txt

 5. Закоммитить файл.
git commit -m "about me"

 6. Отправить файл на внешний GitHub репозиторий.
git push

 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
vim new.txt, затем нажать на "insert", после ввода данных - "Esc" :wq

 8. Отправить изменения на внешний репозиторий.
 git commit -am "new about me"
git push

 9. Создать файл preferences.txt
touch preferences.txt

 10. В файл preferences.txt добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
vim preferences.txt, затем нажать на "insert", после ввода данных - "Esc" :wq

 11. Создать файл skills.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
touch skills.txt
vim skills.txt, затем нажать на "insert", после ввода данных - "Esc" :wq
 12. Сделать коммит в одну строку.
git commit -am "my future skills and preferences"

 13. Отправить сразу 2 файла на внешний репозиторий.
git push

 14. На веб интерфейсе создать файл bug_report.txt.
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Зайти в репозиторий TXT, нажать кнопку "Add file",  выбрать "Create new file", в строке ввести имя файла - "bug_report.txt", нажать "Commit new file"


 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
В репозитории  TXT, напротив файла "bug_report.txt" найти кнопку "Edit this file",  добавить текст баг репорта, добавить коммит, для сохранения изменений нажать "Commit changes"

18. Синхронизировать внешний и локальный репозиторий TXT
 git pull
